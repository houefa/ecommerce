<?php
// src/AppBundle/Entity/User.php

namespace UtilisateursBundle\Entity;

use FOS\UserBundle\Model\User as BaseUser;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * @ORM\Entity
 * @ORM\Table(name="utilisateurs")
 */
class Utilisateurs extends BaseUser
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Adresse", mappedBy="utilisateur")
     * @ORM\JoinColumn(nullable=true)
     */

    private $adresses;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Historique", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */

    private $historiques;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Afourni", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $afournis;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Produit", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $produits;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Livreur", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $livreurs;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Commentaire", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $commentaires;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Categorie", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $categories;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Commande", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $commandes;

    

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Unitemesure", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $unitemesures;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Prix", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $prix;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Qte", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $qtes;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Fournisseur", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $fournisseurs;

    /**
     * @ORM\OneToMany(targetEntity="EcommerceBundle\Entity\Fournisseurproduit", mappedBy="creepar")
     * @ORM\JoinColumn(nullable=true)
     */
    private $fournisseurproduits;


    public function __construct()
    {
        parent::__construct();
        // your own logic
        $this->commandes = new ArrayCollection();
        $this->adresses = new ArrayCollection();
        $this->historiques = new ArrayCollection();
    }


    /**
     * Add commande
     *
     * @param \EcommerceBundle\Entity\Commande $commande
     *
     * @return Utilisateurs
     */
    public function addCommande(\EcommerceBundle\Entity\Commande $commande)
    {
        $this->commandes[] = $commande;

        return $this;
    }

    /**
     * Remove commande
     *
     * @param \EcommerceBundle\Entity\Commande $commande
     */
    public function removeCommande(\EcommerceBundle\Entity\Commande $commande)
    {
        $this->commandes->removeElement($commande);
    }

    /**
     * Get commandes
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCommandes()
    {
        return $this->commandes;
    }

    /**
     * Add adress
     *
     * @param \EcommerceBundle\Entity\Adresse $adress
     *
     * @return Utilisateurs
     */
    public function addAdress(\EcommerceBundle\Entity\Adresse $adress)
    {
        $this->adresses[] = $adress;

        return $this;
    }

    /**
     * Remove adress
     *
     * @param \EcommerceBundle\Entity\Adresse $adress
     */
    public function removeAdress(\EcommerceBundle\Entity\Adresse $adress)
    {
        $this->adresses->removeElement($adress);
    }

    /**
     * Get adresses
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAdresses()
    {
        return $this->adresses;
    }

    /**
     * Add historique
     *
     * @param \EcommerceBundle\Entity\Historique $historique
     *
     * @return Utilisateurs
     */
    public function addHistorique(\EcommerceBundle\Entity\Historique $historique)
    {
        $this->historiques[] = $historique;

        return $this;
    }

    /**
     * Remove historique
     *
     * @param \EcommerceBundle\Entity\Historique $historique
     */
    public function removeHistorique(\EcommerceBundle\Entity\Historique $historique)
    {
        $this->historiques->removeElement($historique);
    }

    /**
     * Get historiques
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getHistoriques()
    {
        return $this->historiques;
    }

    /**
     * Add afourni
     *
     * @param \EcommerceBundle\Entity\Afourni $afourni
     *
     * @return Utilisateurs
     */
    public function addAfourni(\EcommerceBundle\Entity\Afourni $afourni)
    {
        $this->afourni[] = $afourni;

        return $this;
    }

    /**
     * Remove afourni
     *
     * @param \EcommerceBundle\Entity\Afourni $afourni
     */
    public function removeAfourni(\EcommerceBundle\Entity\Afourni $afourni)
    {
        $this->afourni->removeElement($afourni);
    }

    /**
     * Get afourni
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAfourni()
    {
        return $this->afourni;
    }
}
